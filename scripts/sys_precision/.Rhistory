hist(de$V11,freq=F,include.lowest=F,right=T,breaks=2)
hist(de$V11,freq=F,include.lowest=F,breaks=2)
hist(de$V11,freq=F,include.lowest=F,breaks=3)
hist(de$V11,freq=T,include.lowest=F,breaks=3)
r <- hist(sqrt(islands), breaks = c(4*0:5, 10*3:5, 70, 100, 140),#
          col='blue1')
hist(de$V11,freq=T,include.lowest=F,breaks=c(1,2,3,4,5))
hist(de$V11,freq=T,include.lowest=F,breaks=c(0,1,2,3,4,5))
hist(de$V11,freq=T,include.lowest=F,breaks=c(0,1,2,3,4,5),xlim=c(1,2,3,4,5))
hist(de$V11,freq=T,include.lowest=F,breaks=c(1,2,3,4,5),xlim=c(1,2,3,4,5))
hist(de$V11,freq=T,include.lowest=F,breaks=c(1,2,3,4,5),xlim=c(1,2,3,4))
de$V11
db$V8
db$V7
hist(db$V7)
mean(db$V7)
hist(db$V7,breaks(c1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5))
hist(de$V11,breaks=c(1,2,3,4,5))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=15)
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,15))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,15))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,15))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,15))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(db$V7,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5),ylim=c(0,20))
hist(de$V11,breaks=c(1,2,3,4,5), break=c(0.5,1.5,2.5))
hist(de$V11, breaks=c(0.5,1.5,2.5))
hist(de$V11, breaks=c(0.5,1.5,2.5,3.5,4.5,5.5))
require(MASS)
truehist(de$V11)
truehist(de$V11,h=0.5)
truehist(de$V11,h=0.5,breaks=c(0.5,1.5,2.5,3.5,4.5,5.5))
truehist(de$V11,h=0.2,breaks=c(0.5,1.5,2.5,3.5,4.5,5.5))
truehist(de$V11,h=0.3,breaks=c(0.5,1.5,2.5,3.5,4.5,5.5))
help(truehist)
truehist(de$V11,h=0.5)
truehist(de$V11,h=0.5, breaks=1)
truehist(de$V11,h=0.5, breaks=5)
truehist(de$V11,h=0.5, breaks=6)
truehist(de$V11,h=0.5, breaks=10)
truehist(de$V11,h=0.5, breaks=2)
library(ggplot2)
qplot(de,data=V11,geom="histogram")
qplot(de,data=d$V11,geom="histogram")
qplot(de,data=de$V11,geom="histogram")
rating
qplot(de$V11,data=de$V11,geom="histogram")
qplot(de$V11, geom="histogram")
qplot(de$V11, geom="histogram", binwidth=1)
qplot(de$V11, geom="histogram", binwidth=0.4)
qplot(de$V11, geom="histogram", binwidth=0.5)
qplot(de$V11, geom="histogram", binwidth=1)
qplot(de$V11, geom="histogram", binwidth=1, width=0.5)
sqldf
library(sqldf)
d
sqldf("select * from de")
sqldf("select * from de where V")
sqldf("select * from de where V11=1")
sqldf("select * from de where V11=2")
sqldf("select V11, count(*) from de group by V11")
sqldf("select V8, count(*) from db group by V8")
sqldf("select V7, count(*) from db group by V7")
sqldf("select * from de where V11=2")
sqldf("select * from de where V7=2")
citation(sqldf)
citation("sqldf")
citation("t.test")
citation("stat")
citation("ggplot2")
dh<-read.table(pipe('pbpaste'))
head(dh)
dhb<-subset(dh$V1='vsb')
dhb<-subset(dh$V1=='vsb')
dhb<-subset(dh, dh$V1=='vsb')
dhe<-subset(dh, dh$V1=='vse')
dhn<-subset(dh, dh$V1=='vsn')
summary(dhb)
t.test(dhb$V3, dhe$V3)
t.test(dhb$V3, dhe$V3, alternative='less')
wilcox.test(dhb$V3, dhe$V3, alternative='less')
wilcox.test(dhb$V3, dhn$V3, alternative='less')
d <- read.table(pipe('pbpaste'))
head(d)
d <- read.table(pipe('pbpaste'))
head(d)
db <- subset(d, d$V1= 'vsb')
db <- subset(d, d$V1 == 'vsb')
de <- subset(d, d$V1 == 'vse')
dn <- subset(d, d$V1 == 'vsn')
t.test(db$V2, de$V2)
t.test(db$V2, de$V2, alternative='less')
t.test(db$V2, dn$V2, alternative='less')
t.test(db$V2, dn$V2)
d <- read.table(pipe('pbpaste'))
db <- subset(d, d$V1= 'vsb')
de <- subset(d, d$V1 == 'vse')
dn <- subset(d, d$V1 == 'vsn')
db <- subset(d, d$V1 == 'vsb')
summary(db)
t.test(db$V2, de$V2, alternative='less')
wilcox.test(db$V2, de$V2, alternative='less')
wilcox.test(db$V2, dn$V2, alternative='less')
t.test(db$V2, dn$V2, alternative='less')
wilcox.test(db$V2, dn$V2, alternative='less')
wilcox.test(db$V2, dn$V2)
wilcox.test(db$V2, dn$V2, alternative='less')
aov(db$V2, dn$V2)
db
head(db)
aov(db$V2, db$V1)
aov(db$V2~db$V1)
aov
help(aov)
head(db)
aov(db$V1~db$V2)
aov(db$V2~db$V1)
anova
glm
help(glm)
education	time	distance	interest	method	weather	go3	2	medium	3	walking	good	y3	2	medium	3	walking	bad	n3	2	medium	4	walking	good	y3	2	medium	4	walking	bad	y3	3	medium	2	walking	good	n3	3	medium	2	walking	bad	n3	1	close	2	walking	good	n3	1	close	2	walking	bad	n3	3	medium	5	walking	good	y3	3	medium	5	walking	bad	n3	1	close	4	walking	good	y3	1	close	4	walking	bad	n3	2	medium	5	walking	good	y3	2	medium	5	walking	bad	y3	2	close	4	walking	good	y3	2	close	4	walking	bad	y3	3	medium	4	walking	good	y3	3	medium	4	walking	bad	y3	1	medium	2	walking	good	n3	1	medium	2	walking	bad	n4	2	far	5	walking	good	y4	2	far	5	walking	bad	y4	2	close	4	walking	good	y4	2	close	4	walking	bad	y4	2	far	5	walking	good	y4	2	far	5	walking	bad	y4	1	close	2	walking	good	n4	1	close	2	walking	bad	n4	3	far	3	walking	good	y4	3	far	3	walking	bad	y3	2	medium	3	walking	good	y3	2	medium	3	walking	bad	y3	2	medium	5	walking	good	y3	2	medium	5	walking	bad	y3	3	medium	2	walking	good	y3	3	medium	2	walking	bad	n3	2	mediu
m	5	walking	good	y3	2	medium	5	walking	bad	y3	1	medium	5	walking	good	y3	1	medium	5	walking	bad	y3	3	close	4	walking	good	y3	3	close	4	walking	bad	y3	1	close	5	driving	good	y3	1	close	5	driving	bad	n3	1	close	3	driving	good	y3	1	close	3	driving	bad	n3	2	close	3	walking	good	y3	2	close	3	walking	bad	n3	3	medium	4	walking	good	y3	3	medium	4	walking	bad	y3	2	medium	1	walking	good	n3	2	medium	1	walking	bad	n
t <- read.table(pipe("pbpaste"))
t
head(t)
t <- read.table(pipe("pbpaste"), header=T)
head(t)
library(igraph)
g<-barabasi.game(100)
g
plot(g)
graph.motifs(g,3)
graph.isoclass(g)
graph.isoclass(3, 16, directed=TRUE)
graph.isocreate(3, 16, directed=TRUE)
graph.motifs
graph.motifs(g, 3)
graph.motifs(g, 4)
graph.motifs(g, 3)
plot(g)
graph.isoclass(g)
graph.isocreate(3, 1, directed=TRUE)
graph.isocreate(3, 2, directed=TRUE)
graph.isocreate(3, 3, directed=TRUE)
graph.isocreate(3, 4, directed=TRUE)
graph.isocreate(3, 5, directed=TRUE)
graph.isocreate(3, 16, directed=TRUE)
graph.isocreate(3, 15, directed=TRUE)
graph.isocreate(3, 0, directed=TRUE)
graph.isocreate(3, 1, directed=TRUE)
graph.isocreate(3, 2, directed=TRUE)
graph.isocreate(3, 4, directed=TRUE)
graph.isocreate(3, 5, directed=TRUE)
graph.isocreate(3, 6, directed=TRUE)
graph.isocreate(3, 7, directed=TRUE)
graph.isocreate(3, 8, directed=TRUE)
graph.isocreate(3, 9, directed=TRUE)
graph.isocreate(3, 10, directed=TRUE)
graph.isocreate(3, 1, directed=TRUE)
graph.isocreate(3, 2, directed=TRUE)
setwd("/Users/codex/prj/analysis/analysis_adaptive_vibe/scripts/sys_precision")
script("system_precision.r")
run
source("system_precision.r")
source("system_precision_marquee.r")
source("system_precision_ndcg.r")
source("system_precision.r")
db
head(db)
mean(db)
mean(db$top10)
source("system_precision.r")
source("system_precision.r")
mean(vdb)
mean(vsb
)
mean(vsb)
db
head(db)
mean(db)
mean(db$top10)
source("system_precision.r")
mean(db$top10)
source("system_precision.r")
db
head(db)
mean(db)
source("system_precision.r")
source("system_precision.r")
mean(db)
head(db$top10)
mean(db$top10)
source("system_precision.r")
mean(db$top10)
source("system_precision_ndcg.r")
source("system_precision_ndcg.r")
source("system_precision_ndcg.r")
source("system_precision_ndcg.r")
source("system_precision_time.r")
source("precision_marquee.r")
source("system_precision_ndcg.r")
source("system_precision_ndcg.r")
source("system_precision_ndcg.r")
source("system_precision.r")
head(db)
mean(db$top10)
mean(db)
source("system_precision.r")
mean(db)
d<- read.table('../../data/precision_marquee.txt')#
ds <- subset(d, d$V3 >2 & d$V3 != 10 & d$V3 != 29)
head(ds)
aggregate(ds$V4, mean, by=list(ds$V1))
db<-read.table('system_precision_baseline.txt', header=T)#
dbs<-subset(db, userno > 2 & userno != 10 & userno != 29)#
#
dv<-read.table('precision_marquee.txt')#
dvs<-subset(dv, dv$V3 >2 & dv$V3 != 10 & dv$V3 != 29)#
#
pbase <- dbs$top10#
pne <- subset(dvs, dvs$V1 == 'vsn')$V4#
pvibe <- subset(dvs, dvs$V1 == 'vse')$V4#
#
wilcox.test(pbase, pvibe)#
wilcox.test(pbase, pne)
head(db)
head(dbs)
mean(dbs$top10)
head(dvs)
head(dvs)
pbase
mean(pbase)
dbv <- data.frame(sys=dbs$sys, userno=dbs$userno, p=dbs$top10)#
dvv <- data.frame(sys=dvs$V1, userno=dvs$V3, p=dvs$V4)#
#
dall <- rbind(dbv, dvv)#
res<-kruskal.test(p~sys, dall); print(res)#
res<-pairwise.wilcox.test(dall$p, dall$sys); print(res)
source("system_precision_ndcg.r")
