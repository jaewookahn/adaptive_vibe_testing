t.test(dhb$V3, dhe$V3, alternative='less')
wilcox.test(dhb$V3, dhe$V3, alternative='less')
wilcox.test(dhb$V3, dhn$V3, alternative='less')
d <- read.table(pipe('pbpaste'))
head(d)
d <- read.table(pipe('pbpaste'))
head(d)
db <- subset(d, d$V1= 'vsb')
db <- subset(d, d$V1 == 'vsb')
de <- subset(d, d$V1 == 'vse')
dn <- subset(d, d$V1 == 'vsn')
t.test(db$V2, de$V2)
t.test(db$V2, de$V2, alternative='less')
t.test(db$V2, dn$V2, alternative='less')
t.test(db$V2, dn$V2)
d <- read.table(pipe('pbpaste'))
db <- subset(d, d$V1= 'vsb')
de <- subset(d, d$V1 == 'vse')
dn <- subset(d, d$V1 == 'vsn')
db <- subset(d, d$V1 == 'vsb')
summary(db)
t.test(db$V2, de$V2, alternative='less')
wilcox.test(db$V2, de$V2, alternative='less')
wilcox.test(db$V2, dn$V2, alternative='less')
t.test(db$V2, dn$V2, alternative='less')
wilcox.test(db$V2, dn$V2, alternative='less')
wilcox.test(db$V2, dn$V2)
wilcox.test(db$V2, dn$V2, alternative='less')
aov(db$V2, dn$V2)
db
head(db)
aov(db$V2, db$V1)
aov(db$V2~db$V1)
aov
help(aov)
head(db)
aov(db$V1~db$V2)
aov(db$V2~db$V1)
anova
glm
help(glm)
setwd("~/prj/analysis/analysis_adaptive_vibe/data")
ls -
;
ls()
dir()
d<-read.table("query_length.txt")
head(d)
ds <- subset(d, d$V2 > 2 & d$V2 != 10 & d2$V2 != 29)
ds <- subset(d, d$V2 > 2 & d$V2 != 10 & d$V2 != 29)
ds.names
names[ds]
names(ds)
names(ds) <- c("sys", "userno", "topicid", "ql")
head(ds)
aggregate(ds$ql, by=list(ds$sys))
aggregate(ds$ql, mean, by=list(ds$sys))
aggregate(ds$ql, mean, by=list(ds$sys, ds$userno))
aggregate(ds$ql, mean, by=list(ds$sys, ds$topicid))
aggregate(ds$ql, mean, by=list(ds$topicid))
aggregate(ds$ql, mean, by=list(ds$sys))
kruskal.test(ql~sys, dl)
kruskal.test(ql~sys, ds)
aggregate(ds$ql, mean, by=list(ds$topicid))
kruskal.test(ql~topicid, dl)
kruskal.test(ql~topicid, ds)
source("query_length.txt")
setwd("../scripts/activity/")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
source("query_length.r")
setwd("../../data")
dir()
dir()
dir()
d<-read.table("action_movepoi.txt")
head(d)
d<-read.table("action_movepoi.txt", header=T)
head(d)
aggregate(d$poitype, length, by=list(d$sys))
aggregate(d$poitype, length, by=list(d$userno))
aggregate(d$poitype, mean, by=list(d$userno))
aggregate(d$poitype, length, by=list(d$userno))
dt <- aggregate(d$poitype, length, by=list(d$userno))
summary(dt)
sd(dt$x)
aggregate(d$poitype, length, by=list(d$sys))
aggregate(d$poitype, length, by=list(d$sys,$poitype))
aggregate(d$poitype, length, by=list(d$sys,d$poitype))
aggregate(d$poitype, length, by=list(d$poitype,d$sys))
hist(dt$x)
hist(dt$x, main="Frequency of POI Movement")
hist(dt$x, main="Frequency of POI Movement by User", )
hist(dt$x, main="Frequency of POI Movement by User", xlab="User's movement frequency")
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement")
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count")
help(hist)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray")
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", break=10)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=5)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=20)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,150))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,150), ylim=c(0,10))
d<-read.table("action_vis_opendoc.txt")
head(d)
aggregate(d, length, by=list($V5))
aggregate(d, length, by=list(d$V5))
aggregate(d$V5, length, by=list(d$V5))
d1<-subset(d, V2 <= 27)
d2<-subset(d, V2 > 27)
aggregate(d2$V5, length, by=list(d2$V5))
aggregate(d1$V5, length, by=list(d1$V5))
sqldf("select count(distinct V2) from d1")
sqldf("select count(distinct V2) from d1")
library(sqldf)
sqldf("select count(distinct V2) from d1")
sqldf("select count(distinct V2) from d2")
d<-read.table("action_resetvis.txt")
head(d)
aggregate(d$V4, length, by=list(d$V1))
dt<-aggregate(d$V4, length, by=list(d$V2))
head(dt)
summary(dt)
sd(dt$x)
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,150), ylim=c(0,10))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,100), ylim=c(0,10))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,100), ylim=c(0,20))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,100), ylim=c(0,15))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,80), ylim=c(0,15))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,80), ylim=c(0,12))
hist(dt$x, main="Frequency of POI Movement by User", xlab="POI Movement", ylab="User Count", col="gray", breaks=10, xlim=c(0,80), ylim=c(0,10))
hist(dt$x, main="Frequency of Visualization Update", xlab="Visualization Update", ylab="User Count", col="gray", breaks=10, xlim=c(0,80), ylim=c(0,10))
d<-read.table("action_slider.txt", header=T)
head(d)
d<-read.table("action_slider.txt", header=F)
head(d)
aggregate(d$V4, length, by=list(d$V1))
aggregate(d$V4, length, by=list(d$V3))
dt<-aggregate(d$V4, length, by=list(d$V2))
summary(dt$)
summary(dt$x)
dt<-aggregate(d$V4, length, by=list(d$V2))
head(dt)
d<-read.table("action_movepoi.txt", header=T)#
#
aggregate(d$poitype, length, by=list(d$sys))#
aggregate(d$poitype, length, by=list(d$poitype,d$sys))#
#
dt <- aggregate(d$poitype, length, by=list(d$userno))#
summary(dt)
head(dt)
length(dt$x)
d<-read.table("action_slider.txt", header=F)#
#
dt<-aggregate(d$V4, length, by=list(d$V2))#
#
aggregate(d$V4, length, by=list(d$V1))#
aggregate(d$V4, length, by=list(d$V3))
length(dt$x)
d<-read.table("action_marquee.txt")
head(d)
d<-read.table("action_marquee.txt", header=T)
head(d)
length(d$sys)
dt<-aggregate(d$docs, length, by=list(d$userno))
head(dt)
length(dt)
length(dt$x)
summary(dts)
summary(dt)
aggregate(d$docs, length, by=list(d$sys))
aggregate(d$docs, length, by=list(d$topicid))
d<-read.table("action_automarquee.txt")
head(d)
d<-read.table("action_automarquee.txt",header=T)
aggregate(d$docs, length, by=list(d$sys))#
aggregate(d$docs, length, by=list(d$topicid))
dt<-aggregate(d$docs, length, by=list(d$userno))
dummary(dt)
summary(dt)
dt
#
d<-read.table("action_movepoi.txt", header=T)#
#
aggregate(d$poitype, length, by=list(d$sys))#
aggregate(d$poitype, length, by=list(d$poitype,d$sys))#
#
dt <- aggregate(d$poitype, length, by=list(d$userno))
dt
d
head(d)
dtq <- subset(dt, dt$potype == 0)
dtu <- subset(dt, dt$potype > 0)
head(dtq)
dq <- subset(dt, d$potype == 0)
du <- subset(du, d$potype > 0)
du <- subset(d, d$potype > 0)
dtq <- aggregate(dt, length, dt$userno)
dtq <- aggregate(dt, length, by=list(dt$userno)()
dtq <- aggregate(dt, length, by=list(dt$userno))
dtq <- aggregate(dt, length, by=list(dt$userno))
dqt <- aggregate(dq, length, by=list(dq$userno))
head(dq)
head(dq)
du
head(d)
du <- subset(d, d$poitype>0)
dq <- subset(d, d$poitype>0)
du <- subset(d, d$poitype == 0)
dq <- subset(d, d$poitype == 0)
du <- subset(d, d$poitype > 0)
head(dq)
head(du)
dqt <- aggregate(dq, length, by=list(dq$userno))
dut <- aggregate(du, length, by=list(du$userno))
head(dqt)
head(dut)
dut <- aggregate(du$action, length, by=list(du$userno))
dqt <- aggregate(dq$action, length, by=list(dq$userno))
head(dqt)
head(dut)
length(dqt$x)
length(dut$x)
sqldf("select * from dqt, dut where dqt.Group.1 = dut.Group.1")
dqt <- aggregate(dq$action, length, by=list(userno=dq$userno))
dut <- aggregate(du$action, length, by=list(userno=du$userno))
head(dqt)
head(dut)
sqldf("select * from dqt, dut where dqt.userno = dut.userno")
sqldf("select * from dqt, dut where dqt.userno left join dut.userno")
sqldf("select * from dqt left join dut on dqt.userno == dut.userno")
sqldf("select dut.x, dqt.x from dqt left join dut on dqt.userno == dut.userno")
head(dut)
head(dqt)
sqldf("select dut.userno, dut.x, dqt.x from dqt left join dut on dqt.userno == dut.userno")
sqldf("select dut.userno, dut.x, dqt.x from dqt right join dut on dqt.userno == dut.userno")
sqldf("select dut.userno, dut.x, dqt.x from dqt left join dut on (dqt.userno == dut.userno)")
sqldf("select dut.userno, dut.x, dqt.x from dqt left join dut on (dqt.userno == dut.userno)")
dqt <- aggregate(count=dq$action, length, by=list(dq$userno))#
dut <- aggregate(count=du$action, length, by=list(du$userno))
dqt <- aggregate(dq$action, length, by=list(dq$userno))#
dut <- aggregate(du$action, length, by=list(du$userno))
dqt <- aggregate(cnt=dq$action, length, by=list(dq$userno))#
dut <- aggregate(cnt=du$action, length, by=list(du$userno))
dut <- aggregate(du$action, length, by=list(du$userno))
dut <- aggregate(du$action, c=length, by=list(du$userno))
dut <- aggregate(du$action, length, by=list(du$userno))
head(dut)
dqt <- aggregate(dq$action, length, by=list(userno=dq$userno))#
dut <- aggregate(du$action, length, by=list(userno=du$userno))
head(dqt)
head(dut)
merge(dqt, dut, by="userno")
help(merge)
merge(dqt, dut, by="userno", all=T)
dtall<-merge(dqt, dut, by="userno", all=T)
wilcox.test(dtall$x.x, dtall$x.y)
wilcox.test(dtall$x.x, dtall$x.y, paired=T)
exact.wilcox
library(exactRankTests)
exact.wilcox(dtall$x.x, dtall$x.y, paired=T)
exact.wilcoxon(dtall$x.x, dtall$x.y, paired=T)
wilcox.exact(dtall$x.x, dtall$x.y, paired=T)
